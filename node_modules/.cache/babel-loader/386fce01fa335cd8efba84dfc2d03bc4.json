{"ast":null,"code":"var _jsxFileName = \"/Users/reginaschmidt/Documents/Web-Projects/mern_example/client/src/components/AuthForm/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Input, Button, Card, Layout, Typography } from \"antd\";\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\nimport styles from \"./styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport useAuth from \"../../context/auth/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n  const [userData, setUserData] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    username: \"\"\n  });\n  const {\n    signIn,\n    signUp,\n    error,\n    resetError,\n    isAuthenticated\n  } = useAuth();\n  useEffect(() => {\n    if (isAuthenticated) navigate(\"/\");\n  });\n\n  const switchMode = () => {\n    setIsLogin(prevIsLogin => !prevIsLogin);\n  };\n\n  const onSubmit = e => {\n    if (isLogin) signIn(userData, navigate);else signUp(userData, navigate);\n  };\n\n  const changeHandler = e => {\n    const elementName = e.target.name;\n    const value = e.target.value;\n    resetError();\n    setUserData(oldState => {\n      return { ...oldState,\n        [elementName]: value\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    style: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: styles.card,\n      title: /*#__PURE__*/_jsxDEV(Title, {\n        level: 4,\n        style: {\n          textAlign: \"center\"\n        },\n        children: [isLogin ? \"Login to\" : \"Join\", \" Instaverse\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        name: \"authform\",\n        form: form,\n        size: \"large\",\n        wrapperCol: {\n          span: 20,\n          offset: 2\n        },\n        onFinish: onSubmit,\n        children: [isLogin || /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"username\",\n          rules: [{\n            required: true,\n            message: \"Please enter your Username!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 30\n            }, this),\n            placeholder: \"Username\",\n            onChange: changeHandler,\n            name: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"email\",\n          rules: [{\n            required: true,\n            type: \"email\",\n            message: \"Please enter a valid email address\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(MailOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 28\n            }, this),\n            placeholder: \"E-mail address\",\n            onChange: changeHandler,\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: \"Please enter your Password!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 23\n            }, this),\n            type: \"password\",\n            placeholder: \"Password\",\n            onChange: changeHandler,\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), isLogin || /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"confirmPassword\",\n          rules: [{\n            required: true,\n            message: \"Please repeat your Password!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this),\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            onChange: changeHandler,\n            name: \"confirmPassword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: isLogin ? \"Login\" : \"Join\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              margin: \"0 10px 0 20px\"\n            },\n            children: \"Or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            onClick: switchMode,\n            children: isLogin ? \"register now!\" : \"have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"EOTVe1eXKy/AkuewvQ8SzFJDRvs=\", false, function () {\n  return [Form.useForm, useNavigate, useAuth];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/Users/reginaschmidt/Documents/Web-Projects/mern_example/client/src/components/AuthForm/AuthForm.js"],"names":["React","useEffect","useState","Form","Input","Button","Card","Layout","Typography","UserOutlined","LockOutlined","MailOutlined","styles","useNavigate","useAuth","Title","AuthForm","isLogin","setIsLogin","form","useForm","navigate","userData","setUserData","email","password","confirmPassword","username","signIn","signUp","error","resetError","isAuthenticated","switchMode","prevIsLogin","onSubmit","e","changeHandler","elementName","target","name","value","oldState","container","card","textAlign","span","offset","required","message","type","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Form, Input, Button, Card, Layout, Typography } from \"antd\";\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\nimport styles from \"./styles\";\nimport {useNavigate } from \"react-router-dom\";\nimport useAuth from \"../../context/auth/useAuth\";\n\n\nconst { Title } = Typography;\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n\n\n  const [userData, setUserData] = useState({\n    email:\"\",\n    password:\"\",\n    confirmPassword:\"\",\n    username:\"\"\n                }) \n\n  const {signIn, signUp, error, resetError, isAuthenticated} = useAuth()\n\n  useEffect(()=>{\n    if(isAuthenticated) navigate(\"/\")\n  })\n \n\n  const switchMode = () => {\n    setIsLogin((prevIsLogin) => !prevIsLogin);\n  };\n\n  const onSubmit = (e) => {\n    \n\n    if(isLogin)\n    signIn(userData, navigate)\n    else signUp(userData, navigate)\n  } \n\n   const changeHandler = (e) =>{\n    const elementName = e.target.name;\n    const value = e.target.value;\n    resetError()\n\n    setUserData(oldState=>{return {...oldState, [elementName]: value }})\n  } \n\n\n  return (\n    <Layout style={styles.container}>\n      <Card\n        style={styles.card}\n        title={\n          <Title level={4} style={{ textAlign: \"center\" }}>\n            {isLogin ? \"Login to\" : \"Join\"} Instaverse\n          </Title>\n        }\n      >\n        <Form\n          name=\"authform\"\n          form={form}\n          size=\"large\"\n          wrapperCol={{ span: 20, offset: 2 }}\n          \n          onFinish={onSubmit}\n          > \n          \n          {isLogin || (\n            <Form.Item\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter your Username!\",\n                },\n              ]}\n            >\n              <Input prefix={<UserOutlined />} placeholder=\"Username\" onChange={changeHandler} name=\"username\" />\n            </Form.Item>\n          )}\n          <Form.Item\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                type: \"email\",\n                message: \"Please enter a valid email address\",\n              },\n            ]}\n          >\n            <Input prefix={<MailOutlined />} placeholder=\"E-mail address\" onChange={changeHandler} name=\"email\"/>\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter your Password!\",\n              },\n            ]}\n          >\n            <Input.Password\n              prefix={<LockOutlined />}\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={changeHandler} \n              name=\"password\"\n            />\n          </Form.Item>\n          {isLogin || (\n            <Form.Item\n              name=\"confirmPassword\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please repeat your Password!\",\n                },\n              ]}\n            >\n              <Input.Password\n                prefix={<LockOutlined />}\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                onChange={changeHandler} \n                name=\"confirmPassword\"\n              />\n            </Form.Item>\n          )}\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              {isLogin ? \"Login\" : \"Join\"}\n            </Button>\n            \n            <span style={{ margin: \"0 10px 0 20px\" }}>Or</span>\n            <Button type=\"link\" onClick={switchMode}>\n              {isLogin ? \"register now!\" : \"have an account?\"}\n            </Button>\n          </Form.Item>\n        </Form>\n        {error? <p>{error}</p>:null}\n      </Card>\n    </Layout>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}