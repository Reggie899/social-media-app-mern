{"ast":null,"code":"var _jsxFileName = \"/Users/reginaschmidt/Documents/Web-Projects/mern_example/client/src/components/Story/Story.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Card, Tooltip, Typography, Image } from \"antd\";\nimport { EditOutlined, DeleteTwoTone, HeartTwoTone } from \"@ant-design/icons\";\nimport styles from \"./styles\";\nimport moment from \"moment\"; //import { useDispatch } from \"react-redux\";\n//import { deleteStory, likeStory } from \"../../actions/stories\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Meta\n} = Card;\nconst {\n  Link,\n  Paragraph,\n  Text\n} = Typography;\n\nconst Story = _ref => {\n  _s();\n\n  var _user$result;\n\n  let {\n    story,\n    setSelectedId\n  } = _ref;\n  const [expand, setExpand] = useState(true); // const dispatch = useDispatch();\n\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const cardActions = [/*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.actions,\n    children: /*#__PURE__*/_jsxDEV(Tooltip, {\n      placement: \"top\",\n      title: \"Like \",\n      color: \"magenta\" //onClick={() => dispatch(likeStory(story._id))}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"magenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), \"\\xA0 \", story.likes.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n    placement: \"top\",\n    title: \"Edit\",\n    children: /*#__PURE__*/_jsxDEV(EditOutlined //   key=\"edit\"\n    , {\n      onClick: () => {\n        setSelectedId(story._id);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n    placement: \"top\",\n    title: \"Delete\",\n    color: \"red\",\n    children: /*#__PURE__*/_jsxDEV(DeleteTwoTone // key=\"delete\"\n    , {\n      twoToneColor: \"red\" // onClick={() => dispatch(deleteStory(story._id))}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this)];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: styles.card,\n    cover: /*#__PURE__*/_jsxDEV(Image, {\n      src: story.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 14\n    }, this),\n    actions: (user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result._id) === story.userId ? cardActions : (user === null || user === void 0 ? void 0 : user.result) ? cardActions.slice(0, 1) : null,\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: story.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      style: {\n        margin: 0\n      },\n      ellipsis: {\n        rows: 2,\n        expandable: true,\n        symbol: \"more\",\n        onExpand: () => {\n          setExpand(true);\n        },\n        onEllipsis: () => {\n          setExpand(false);\n        }\n      },\n      children: story.caption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), expand ? /*#__PURE__*/_jsxDEV(Link, {\n      href: \"#\",\n      children: story.tags.split(\" \").map(tag => `#${tag} `)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      type: \"secondary\",\n      children: moment(story.postDate).fromNow()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Story, \"jyPmbaLTzZucfbzhIzykffWclA8=\");\n\n_c = Story;\nexport default Story;\n\nvar _c;\n\n$RefreshReg$(_c, \"Story\");","map":{"version":3,"sources":["/Users/reginaschmidt/Documents/Web-Projects/mern_example/client/src/components/Story/Story.js"],"names":["React","useState","Card","Tooltip","Typography","Image","EditOutlined","DeleteTwoTone","HeartTwoTone","styles","moment","Meta","Link","Paragraph","Text","Story","story","setSelectedId","expand","setExpand","user","JSON","parse","localStorage","getItem","cardActions","actions","likes","length","_id","card","image","result","userId","slice","username","margin","rows","expandable","symbol","onExpand","onEllipsis","caption","tags","split","map","tag","postDate","fromNow"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Tooltip, Typography, Image } from \"antd\";\nimport { EditOutlined, DeleteTwoTone, HeartTwoTone } from \"@ant-design/icons\";\nimport styles from \"./styles\";\nimport moment from \"moment\";\n//import { useDispatch } from \"react-redux\";\n//import { deleteStory, likeStory } from \"../../actions/stories\";\n\nconst { Meta } = Card;\nconst { Link, Paragraph, Text } = Typography;\nconst Story = ({ story, setSelectedId }) => {\n  const [expand, setExpand] = useState(true);\n // const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n\n  const cardActions = [\n    <div style={styles.actions}>\n      <Tooltip\n        placement=\"top\"\n        title=\"Like \"\n        color=\"magenta\"\n        //onClick={() => dispatch(likeStory(story._id))}\n      >\n        <HeartTwoTone twoToneColor=\"magenta\" />\n        &nbsp; {story.likes.length}\n      </Tooltip>\n    </div>,\n    <Tooltip placement=\"top\" title=\"Edit\">\n      <EditOutlined\n        //   key=\"edit\"\n        onClick={() => {\n          setSelectedId(story._id);\n        }}\n      />\n    </Tooltip>,\n    <Tooltip placement=\"top\" title=\"Delete\" color=\"red\">\n      <DeleteTwoTone\n        // key=\"delete\"\n        twoToneColor=\"red\"\n        // onClick={() => dispatch(deleteStory(story._id))}\n      />\n    </Tooltip>,\n  ];\n\n  return (\n    <Card\n      style={styles.card}\n      cover={<Image src={story.image} />}\n      actions={\n        user?.result?._id === story.userId\n          ? cardActions\n          : user?.result\n          ? cardActions.slice(0, 1)\n          : null\n      }\n    >\n      <Meta title={story.username} />\n\n      <Paragraph\n        style={{ margin: 0 }}\n        ellipsis={{\n          rows: 2,\n          expandable: true,\n          symbol: \"more\",\n          onExpand: () => {\n            setExpand(true);\n          },\n          onEllipsis: () => {\n            setExpand(false);\n          },\n        }}\n      >\n        {story.caption}\n      </Paragraph>\n      {expand ? (\n        <Link href=\"#\">{story.tags.split(\" \").map((tag) => `#${tag} `)}</Link>\n      ) : null}\n      <br />\n      <Text type=\"secondary\">{moment(story.postDate).fromNow()}</Text>\n    </Card>\n  );\n};\n\nexport default Story;\n"]},"metadata":{},"sourceType":"module"}